{
  "name": "fmt",
  "description": "Command line output formatting.",
  "version": "0.4.0",
  "author": {
    "name": "Andrew Chilton",
    "email": "chilts@appsattic.com",
    "url": "http://www.chilts.org/"
  },
  "homepage": "https://github.com/appsattic/fmt",
  "main": "fmt.js",
  "engines": {
    "node": "*"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/appsattic/fmt.git"
  },
  "bugs": {
    "url": "http://github.com/appsattic/fmt/issues",
    "mail": "chilts@appsattic.com"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/appsattic/fmt/raw/master/LICENSE"
    }
  ],
  "keywords": [
    "cmd",
    "cli",
    "console",
    "output",
    "stdout",
    "dump",
    "format",
    "verbose"
  ],
  "readme": "# fmt - Command Line Output Formatting #\n\n## Example ##\n\n```\nvar fmt = require('fmt');\n\nfmt.sep();\nfmt.title('The Truth about Cats');\nfmt.field('Name', 'Felix');\nfmt.field('Description', 'Regal. Mysterious with a wise look in her eyes.');\nfmt.field('Legs', 4);\nfmt.title('The Truth about Dogs');\nfmt.field('Name', 'Fido');\nfmt.field('Description', 'Bouncy. Out there, shiny, long brown coat.');\nfmt.field('Legs', 2);\nfmt.sep();\nfmt.title('A List');\nfmt.li('item 1');\nfmt.li('the second item');\nfmt.li('the third and final item');\nfmt.separator();\n```\n\nHas the output:\n\n```\n===============================================================================\n--- The Truth about Cats ------------------------------------------------------\nName                 : Felix\nDescription          : Regal. Mysterious with a wise look in her eyes.\nLegs                 : 4\n--- The Truth about Dogs ------------------------------------------------------\nName                 : Fido\nDescription          : Bouncy. Out there, shiny, long brown coat.\nLegs                 : 2\n===============================================================================\n--- A List --------------------------------------------------------------------\n* item 1\n* the second item\n* the third and final item\n===============================================================================\n```\n\n## Usage ##\n\n### fmt.separator() (alias: fmt.sep()) ###\n\nMakes a double line on the screen which is 79 chars long.\n\ne.g.\n\n```\nfmt.separator();\nfmt.sep();\n\n->\n\n===============================================================================\n```\n\n### fmt.line() ###\n\nMakes a line on the screen which is 79 chars long.\n\ne.g.\n\n```\nfmt.line()\n\n->\n\n-------------------------------------------------------------------------------\n```\n\n### fmt.title(title) ###\n\nRenders a title with three '-', then the title, then more (until the 79th char).\n\ne.g.\n\n```\nfmt.title('The Truth about Cats');\n\n->\n\n--- The Truth about Cats ------------------------------------------------------\n```\n\n### fmt.field(key, value) ###\n\nRenders a line with a key and then the value, but with the key padded to 20 chars so that each field lines up.\n\n```\nfmt.field('Name', 'Fido');\nfmt.field('Description', 'Bouncy. Out there, shiny, long brown coat.');\nfmt.field('Legs', 2);\n\n->\n\nName                 : Fido\nDescription          : Bouncy. Out there, shiny, long brown coat.\nLegs                 : 2\n```\n\n### fmt.subfield(key, value) ###\n\nRenders a line with a key (preceded by '- ') and then the value, but with the key padded to 20 chars so that each field\nlines up. This can be helpful when you have a field, then other fields related to that one.\n\ne.g.\n\n```\nfs.stat(__filename, function(err, stats) {\n    fmt.field('File', __filename);\n    fmt.subfield('size', stats.size);\n    fmt.subfield('uid', stats.uid);\n    fmt.subfield('gid', stats.gid);\n    fmt.subfield('ino', stats.ino);\n    fmt.subfield('ctime', stats.ctime);\n    fmt.subfield('mtime', stats.mtime);\n});\n\n->\n\nFile                 : /home/user/path/to/cats-and-dogs.js\n- size               : 1003\n- uid                : 1000\n- gid                : 1000\n- ino                : 17567406\n- ctime              : Sun Aug 19 2012 17:08:52 GMT+1200 (NZST)\n- mtime              : Sun Aug 19 2012 17:08:52 GMT+1200 (NZST)\n```\n\n### fmt.li(msg) ###\n\nPrints the msg preceded with a '* ', so that it looks like a list.\n\ne.g.\n\n```\nfmt.title('A List');\nfmt.li('item 1');\nfmt.li('the second item');\nfmt.li('the third and final item');\nfmt.line()\n\n->\n\n--- A List --------------------------------------------------------------------\n* item 1\n* the second item\n* the third and final item\n-------------------------------------------------------------------------------\n```\n\n### fmt.dump(data[, name]) ###\n\nPrints a dump of the data, with the optional name beforehand. This is basically a shortcut for :\nconsole.log(util.inspect(data, false, null, true));\n\ne.g.\n\n```\nfs.stat(__filename, function(err, stats) {\n    fmt.separator();\n    fmt.title('Dump (with name)');\n    fmt.dump(stats, 'stats');\n    fmt.separator();\n    fmt.title('Dump');\n    fmt.dump(stats);\n    fmt.separator();\n});\n\n->\n\n===============================================================================\n--- Dump (with name) ----------------------------------------------------------\nstats : { dev: 2049,\n  ino: 17567406,\n  mode: 33188,\n  nlink: 1,\n  uid: 1000,\n  gid: 1000,\n  rdev: 0,\n  size: 1025,\n  blksize: 4096,\n  blocks: 8,\n  atime: Sun Aug 19 2012 17:28:54 GMT+1200 (NZST),\n  mtime: Sun Aug 19 2012 17:28:51 GMT+1200 (NZST),\n  ctime: Sun Aug 19 2012 17:28:51 GMT+1200 (NZST) }\n===============================================================================\n--- Dump ----------------------------------------------------------------------\n{ dev: 2049,\n  ino: 17567406,\n  mode: 33188,\n  nlink: 1,\n  uid: 1000,\n  gid: 1000,\n  rdev: 0,\n  size: 1025,\n  blksize: 4096,\n  blocks: 8,\n  atime: Sun Aug 19 2012 17:28:54 GMT+1200 (NZST),\n  mtime: Sun Aug 19 2012 17:28:51 GMT+1200 (NZST),\n  ctime: Sun Aug 19 2012 17:28:51 GMT+1200 (NZST) }\n===============================================================================\n```\n\n### fmt.msg(msg) ###\n\nPrints the msg as-is! :)\n\ne.g.\n\n```\nfmt.title('Example');\nfmt.msg('Output as-is!');\nfmt.line();\n\n->\n\n--- Example -------------------------------------------------------------------\nOutput as-is!\n-------------------------------------------------------------------------------\n```\n\n# Author #\n\nWritten by [Andrew Chilton](http://chilts.org/) - [Blog](http://chilts.org/blog/) - [Twitter](https://twitter.com/andychilton).\n\n# License #\n\nMIT: [http://appsattic.mit-license.org/2012/](http://appsattic.mit-license.org/2012/)\n\n(Ends)\n",
  "_id": "fmt@0.4.0",
  "dist": {
    "shasum": "9806c378a1570580b00bb7297afca315fd026979"
  },
  "_from": "fmt@>= 0.4.0"
}
